
[core]
#Percent
@global tariff: 0
#Module visibility tags
#Turtlecore
#Energycharger
#Shieldgenerator
#Iondetonator
#NuclearPayload
#RepairBot
copyFrom: ROOT:data\effects\shieldEffect.template
name: module_attachment
class: CustomUnitMetadata
#price: 2
price: 10
tags: module_attachment

displayText: Module?
displayDescription: Select module to install??

showInEditor: false
maxHp: 3000
#don't keep damage
selfRegenRate:3000

mass: 90000
techLevel: 1
buildSpeed: 0.0002
radius: 20
fogOfWarSightRange:5

transportSlotsNeeded: 1
softCollisionOnAll: 3

canNotBeDirectlyAttacked: true
isUnrepairableUnit: true
showOnMinimap: false
ignoreInUnitCapCalculation: true
isUnselectable: true
disableDeathOnZeroHp: true

energyMax: 10
energyRegen: 0
energyStartingPercentage: 0

#tags: Turtlecore, Energycharger, Shieldgenerator, Iondetonator, RepairBot, laserDef, repairPulse, NuclearPayload
[hiddenAction_createCreditsMessage]
@copyFrom_skipThisSection: true

[template_buildTurret]
extraLagHidingInUI:FALSE 
text: Install
textAddUnitName: ${section.convertTo}
descriptionAddFromUnit: ${section.convertTo}
descriptionAddUnitStats: ${section.convertTo}

isActive: if self.queueSize(empty=true)

setBuilt:0
buildSpeed: 3s

playSoundAtUnit: ROOT:data\soundFx\interface_instal1.ogg
spawnEffects: CUSTOM:ShieldParticle*5,CUSTOM:ShieldParticle2*5,CUSTOM:shieldwave,CUSTOM:Light

#========================================Module
#Note: AutoInstall has been added ... double check the module prices 
[action_lightMG]
#----------------------------nEW
@copyFromSection: template_buildTurret
#@define price: 900
isVisible: if self.hasParent(withTag='lightMG')
buildSpeed: 5s
convertTo: module_lightMG
price: ${Mprice_I+((tariff/100)*Mprice_I)}

[action_repair]
@copyFromSection: template_buildTurret
#@define price: 1000
isVisible: if self.hasParent(withTag='RepairBot')
buildSpeed: 13s
convertTo: module_RepairBot
price: ${Mprice_II+((tariff/100)*Mprice_II)}

[action_shuriSwarmer]
@copyFromSection: template_buildTurret
#@define price: 1000
isVisible: if self.hasParent(withTag='ShuriSwarmer')
buildSpeed: 7s
convertTo: swarmer
price: ${Mprice_II2+((tariff/100)*Mprice_II2)}
addResources: energy=15

[action_shieldGen]
@copyFromSection: template_buildTurret
#@define price: 2000
isVisible: if self.hasParent(withTag='Shieldgenerator')
buildSpeed: 15s
convertTo: module_shieldGen
price: ${Mprice_VI+((tariff/100)*Mprice_VI)}
#addResources: unsetFlag=0-31

#=======================Bonus
takeResources: shield=-500
takeResources_includeParent: true
takeResources_discardCollected: true
[action_ionDewath]
@copyFromSection: template_buildTurret
#@define price: 900
isVisible: if self.hasParent(withTag='Iondetonator')
buildSpeed: 2s
convertTo: module_ionDeath
price: ${Mprice_XI+((tariff/100)*Mprice_XI)}
#addResources: unsetFlag=0-31

[action_redShell]
#----------------------------nEW
@copyFromSection: template_buildTurret
#@define price: 2100
#isVisible: true

#-----------------
isLocked: if not self.globalTeamTags(includes='module_I')
isLockedMessage: Requires research: Module I 
#-----------------

isVisible: if self.hasParent(withTag='RedTurtle')
buildSpeed: 17s
convertTo: module_redShell
price: ${Mprice_III+((tariff/100)*Mprice_III)}
addResources: energy=6

#=======================Bonus
takeResources: shield=-500
takeResources_includeParent: true
takeResources_discardCollected: true
[action_laser]
@copyFromSection: template_buildTurret
#@define price: 1800
#-----------------
isLocked: if not self.globalTeamTags(includes='module_I')
isLockedMessage: Requires research: Module I 
#-----------------
isVisible: if self.hasParent(withTag='laserDef')
buildSpeed: 15s
convertTo: module_laserDefence
price: ${Mprice_IV+((tariff/100)*Mprice_IV)}
addResources: energy=10

[action_energyGharger]
@copyFromSection: template_buildTurret
#@define price: 1900
#-----------------
isLocked: if not self.globalTeamTags(includes='module_I')
isLockedMessage: Requires research: Module I 
#-----------------
isVisible: if self.hasParent(withTag='Energycharger')
buildSpeed: 10s
convertTo: Energy_charger
price: ${Mprice_V+((tariff/100)*Mprice_V)}
#addResources: unsetFlag=0-31


[action_ShieldDefGen]
@copyFromSection: template_buildTurret
#@define price: 3900
#-----------------
isLocked: if not self.globalTeamTags(includes='module_I')
isLockedMessage: Requires research: Module I 
#-----------------
isVisible: if self.hasParent(withTag='Turtlecore')
buildSpeed: 25s
convertTo: shield_laser_defenseGen
price: ${Mprice_VII+((tariff/100)*Mprice_VII)}
#addResources: unsetFlag=0-31

#=======================Bonus
takeResources: shield=-500
takeResources_includeParent: true
takeResources_discardCollected: true
[action_precisionBeam]
#----------------------------nEW
@copyFromSection: template_buildTurret
#@define price: 4750
#-----------------
isLocked: if not self.globalTeamTags(includes='module_I')
isLockedMessage: Requires research: Module I 
#-----------------
isVisible: if self.hasParent(withTag='precisionB')
buildSpeed: 24s
convertTo: module_precisionBeam
price: ${Mprice_VIII+((tariff/100)*Mprice_VIII)}

[action_particleBeam]
#----------------------------nEW
@copyFromSection: template_buildTurret
#@define price: 4000
#-----------------
isLocked: if not self.globalTeamTags(includes='module_I')
isLockedMessage: Requires research: Module I 
#-----------------
isVisible: if self.hasParent(withTag='aaPBeam')
buildSpeed: 26s
convertTo: module_aaparctileBeam
price: ${Mprice_IX+((tariff/100)*Mprice_IX)}

[action_repairPulse1]
@copyFromSection: template_buildTurret
#@define price: 6000
#-----------------
isLocked: if not self.globalTeamTags(includes='module_II')
isLockedMessage: Requires research: Module II
#-----------------
isVisible: if self.hasParent(withTag='repairPulse')
buildSpeed: 20s
convertTo: module_repaipulse
price: ${Mprice_X+((tariff/100)*Mprice_X)}
resetCustomTimer:true


[action_Demo]
@copyFromSection: template_buildTurret
#@define price: 3500
#-----------------
isLocked: if not self.globalTeamTags(includes='module_I')
isLockedMessage: Requires research: Module I

isLockedAlt: if not self.globalTeamTags(includes='jihad') and self.hasParent(withTag='strider') and self.hasParent(withTag='demo')
isLockedAltMessage: Requires research: Jihad Strider 

#-----------------
isVisible: if self.hasParent(withTag='demo')
buildSpeed: 15s
convertTo: module_demo
price: ${Mprice_XII+((tariff/100)*Mprice_XII)}

[action_Nuke]
@copyFromSection: template_buildTurret
#@define price: 9000
#-----------------
isLocked: if not game.nukesEnabled()
isLockedMessage: Oh no... No nuke this time
#-----------------
isLockedAlt: if not self.globalTeamTags(includes='module_I')
isLockedAltMessage: Requires research: Module I 
#-----------------
isLockedAlt2: if not self.globalTeamTags(includes='module_II')
isLockedAlt2Message: Requires research: Module II 
#-----------------
isLocked: if not game.nukesEnabled()
isLockedMessage: Oh no... No nuke this time

isVisible: if self.hasParent(withTag='NuclearPayload')
buildSpeed: 35s
convertTo: module_nuke
price: ${Mprice_XIII+((tariff/100)*Mprice_XIII)}
#addResources: unsetFlag=0-31

#====================================AutoInstall
#Added new feature,,,, players can easily mass installing modules
#Note: Pls, double check the module prices 
[hiddenAction_trigger_LMG]
#-----------------------------------
@define triggertags: TRIGGER_LMG
@define parenttags: lightMG

#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_I+((tariff/100)*Mprice_I)})
requireConditional: if self.hasParent(withTag='${parenttags}') or self.hasParent(withTag='ConcealedMod')
addResources: credits=-${Mprice_I+((tariff/100)*Mprice_I)}
#-----------------------------------
alsoQueueAction: lightMG

[hiddenAction_trigger_REPAIR]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_II+((tariff/100)*Mprice_II)})
requireConditional: if self.hasParent(withTag='${parenttags}') or self.hasParent(withTag='ConcealedMod')
addResources: credits=-${Mprice_II+((tariff/100)*Mprice_II)}
#-----------------------------------
@define triggertags: TRIGGER_REPAIR
@define parenttags: RepairBot
#-----------------------------------
alsoQueueAction: repair

[hiddenAction_trigger_RedTurtle]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_III+((tariff/100)*Mprice_III)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_I')
addResources: credits=-${Mprice_III+((tariff/100)*Mprice_III)}
#-----------------------------------
@define triggertags: TRIGGER_REDTURTLE
@define parenttags: RedTurtle
#-----------------------------------
alsoQueueAction: redShell

[hiddenAction_trigger_LaserD]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_IV+((tariff/100)*Mprice_IV)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_I')
addResources: credits=-${Mprice_IV+((tariff/100)*Mprice_IV)}
#-----------------------------------
@define triggertags: TRIGGER_LASERDEFENSE
@define parenttags: laserDef
#-----------------------------------
alsoQueueAction: laser

[hiddenAction_trigger_EnergyC]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_V+((tariff/100)*Mprice_V)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_I')
addResources: credits=-${Mprice_V+((tariff/100)*Mprice_V)}
#-----------------------------------
@define triggertags: TRIGGER_ENERGYCHARGER
@define parenttags: Energycharger
#-----------------------------------
alsoQueueAction: energyGharger

[hiddenAction_trigger_ShieldG]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_VI+((tariff/100)*Mprice_VI)})
requireConditional: if self.hasParent(withTag='${parenttags}') or self.hasParent(withTag='ConcealedMod')
addResources: credits=-${Mprice_VI+((tariff/100)*Mprice_VI)}
#-----------------------------------
@define triggertags: TRIGGER_SHIELDGENERATOR
@define parenttags: Shieldgenerator
#-----------------------------------
alsoQueueAction: shieldGen

[hiddenAction_trigger_turtleCore]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_VII+((tariff/100)*Mprice_VII)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_I')
addResources: credits=-${Mprice_VII+((tariff/100)*Mprice_VII)}
#-----------------------------------
@define triggertags: TRIGGER_TURTLECORE
@define parenttags: Turtlecore
#-----------------------------------
alsoQueueAction: ShieldDefGen

[hiddenAction_trigger_PrecisionB]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_VIII+((tariff/100)*Mprice_VIII)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_I')
addResources: credits=-${Mprice_VIII+((tariff/100)*Mprice_VIII)}
#-----------------------------------
@define triggertags: TRIGGER_PRECISION
@define parenttags: precisionB
#-----------------------------------
alsoQueueAction: precisionBeam

[hiddenAction_trigger_ParticleB]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_IX+((tariff/100)*Mprice_IX)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_I')
addResources: credits=-${Mprice_IX+((tariff/100)*Mprice_IX)}
#-----------------------------------
@define triggertags: TRIGGER_PARTICLE
@define parenttags: aaPBeam
#-----------------------------------
alsoQueueAction: particleBeam

[hiddenAction_trigger_RepairPulse]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_X+((tariff/100)*Mprice_X)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_II')
addResources: credits=-${Mprice_X+((tariff/100)*Mprice_X)}
#-----------------------------------
@define triggertags: TRIGGER_REPAIRPULSE
@define parenttags: repairPulse
#-----------------------------------
alsoQueueAction: repairPulse1

[hiddenAction_trigger_IonDeath]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_XI+((tariff/100)*Mprice_XI)})
requireConditional: if self.hasParent(withTag='${parenttags}') or self.hasParent(withTag='ConcealedMod')
addResources: credits=-${Mprice_XI+((tariff/100)*Mprice_XI)}
#-----------------------------------
@define triggertags: TRIGGER_IONDEATH
@define parenttags: Iondetonator
#-----------------------------------
alsoQueueAction: ionDewath

[hiddenAction_trigger_DemoCharge]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_XII+((tariff/100)*Mprice_XII)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_I')
addResources: credits=-${Mprice_XII+((tariff/100)*Mprice_XII)}
#-----------------------------------
@define triggertags: TRIGGER_DEMOCHARGE
@define parenttags: demo
#-----------------------------------
alsoQueueAction: Demo

[hiddenAction_trigger_NukePay]
@copyFromSection: hiddenAction_trigger_LMG
#-----------------------------------
autoTrigger: if numberOfUnitsInTeam(greaterThan=0, withTag='${triggertags}', withinRange=150) and not self.queueSize(greaterThan=0) and self.hasResources(credits=${Mprice_XIII+((tariff/100)*Mprice_XIII)})
requireConditional: if self.hasParent(withTag='${parenttags}') and self.globalTeamTags(includes='module_II') and game.nukesEnabled()
addResources: credits=-${Mprice_XIII+((tariff/100)*Mprice_XIII)}
#-----------------------------------
@define triggertags: TRIGGER_NUKE
@define parenttags: NuclearPayload
#-----------------------------------
alsoQueueAction: Nuke

#====================================AutoInstall END
[graphics]
drawLayer: experimentals

total_frames: 1

image:        SHARED:blank.png
image_wreak:  NONE
image_turret: NONE

image_shadow: NONE
shadowOffsetX:3
shadowOffsetY:3

icon_zoomed_out_neverShow: true
showHealthBar: false
showEnergyBar: false
[attack]
canAttack: false
[movement]
movementType:NONE
[effect_ShieldParticle]
drawUnderUnits:false
scaleFrom:0.5
scaleTo:0.1

[effect_ShieldParticle2]
drawUnderUnits:false
scaleFrom:0.5
scaleTo:0.1
[effect_shieldwave]
drawUnderUnits:false
scaleFrom: 0.5
scaleTo: 0
[effect_Light]
drawUnderUnits:false
scaleFrom: 1
scaleTo: 1

[ai]
ai_upgradePriority: 0.2





