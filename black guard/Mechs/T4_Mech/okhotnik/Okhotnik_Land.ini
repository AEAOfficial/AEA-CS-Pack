
[core]

@global missileTargeting: true
@global torpedoL: false

showInEditor:true
name: Okhotnik_Land

displayText: Okhotnik
displayDescription: "battle stations this is not a drill!"\n[Land]\n-Has 14 cell broadside stand-off HV-missiles\n-Heavily armed and armored\n-Can do ultra-quiet mode (undetectable and cannot be attack)\n -Can attack ships and subs while submerge\n -Can surface and walk on land \n -Can attack land and air when surfaced\n\n--------------------------\nWeapon: [Broadside Missiles], Target: Land\Air\nAccuracy: Good, Burst size: 14\nSecWeapon: [MIRV torpedo]


class: CustomUnitMetadata

copyFrom: Okhotnik.ini
selfRegenRate:0
energyRegen: 0.01
builtFrom_1_name: NONE
fogOfWarSightRange:35


#======================================
maxShield: 1000
shieldRegen: 0
shieldRenderRadius: 20
shieldDisplayOnlyDeflection: true
shieldDeflectionDisplayRate: 0.2

generation_resources: shield=2.3
generation_active: if not self.hasFlag(id=10) 
generation_delay: 1
#======================================

[action_theLand]
isVisible: true
buildSpeed: 0s
text: Dive

description: -No no no!, I can't dive on land
iconImage: ROOT:data\icons\land.png

displayType: infoOnlyNoBox
pos: -1

[action_surface]
isVisible: false

[action_dive]
isVisible: false

[action_trigger_onLand]
autoTrigger: false

[action_trigger_onWater]
autoTrigger: if self.overWater()

convertTo: Okhotnik_Surface
buildSpeed: 0
text: TRIGGER
isVisible: false
addResources: unsetFlag=15
[action_ultra_quiet]
isVisible: false

#------------------------------------------------------
[hiddenAction_openStart]
autoTrigger: if (self.isOverwater() or self.isAtGroundHeight()) and not self.hasFlag(id=11) and self.isAttacking()
addResources: setFlag=11, shield=-1000
alsoQueueAction: OpenHatch
alsoTriggerAction: resteTimmer
[arm_1]
#Launcher 1 L
@define armA: 10
x: ${armA+arm}
y: 0
hidden: if self.hasFlag(id=10) or self.isUnderwater()
#-----------------------------------------------------

#----------------------------------0
[hiddenAction_MissileDisabled]
autoTrigger: if not self.hasFlag(id=13) and not self.hasFlag(id=15) and self.hasFlag(id=10) and not self.isAttacking() and not numberOfUnitsInEnemyTeam(greaterThan=0, withinRange=430) and self.customTimer(laterThanSeconds=10)
requireConditional: if not self.isUnderwater()
addResources: setFlag=13

alsoQueueAction: MissileDisabled_closingStart
alsoTriggerAction: MissileDisabled2
[hiddenAction_MissileDisabled2]
requireConditional: if self.hasFlag(id=10)
buildSpeed: 0s
playAnimation: CloseMissile
[hiddenAction_MissileDisabled_closingStart]
requireConditional: if self.hasFlag(id=10)
buildSpeed: 0.7s
addResources: unsetFlag=10
alsoQueueAction: MissileDisabled_closingHatch 
[hiddenAction_MissileDisabled_closingHatch]
#requireConditional: if self.hasFlag(id=10)
buildSpeed: 0.5s
addResources: unsetFlag=13, unsetFlag=16, unsetFlag=11, shield=1000

#-----------------------------------
[graphics]
image:        sample2.png
[attack]
canAttack: true
canAttackFlyingUnits: true
canAttackLandUnits:   true
canAttackUnderwaterUnits: false
canAttackNotTouchingWaterUnits:true

maxAttackRange:430
[leg_1]
x: -25
y: -15
attach_x: -6
attach_y: -5
moveSpeed: 1.5
resetAngle:20
holdDisMin: 10
holdDisMax: 20

image_leg:  leg.png
image_foot: foot.png
image_foot_shadow: SHADOW:foot.png

[leg_2]
x: 25
y: -15
attach_x: 6
attach_y: -5
copyFrom: 1

[leg_3]
x: -25
y: 45
attach_x: -6
attach_y: 35
copyFrom: 1

[leg_4]
x: 25
y: 45
attach_x: 6
attach_y: 35
copyFrom: 1

[leg_5]
x: -19
y: -50
attach_x: -2
attach_y: -40
copyFrom: 1


[leg_6]
x: 19
y: -50
attach_x: 2
attach_y: -40
copyFrom: 1

[movement]
movementType: OVER_CLIFF_WATER
moveSpeed: 0.3
moveAccelerationSpeed: 0.05
moveDecelerationSpeed: 0.05

targetHeight: 2
targetHeightDrift: 0

reverseSpeedPercentage:0.6

maxTurnSpeed: 0.4
turnAcceleration: 0.2
moveSlidingDir:  45


slowDeathFall: true

moveSlidingMode: true
moveIgnoringBody: true




